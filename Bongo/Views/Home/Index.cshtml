@model IndexViewModel
@{
    ViewData["Title"] = "Home";
    string semester = ViewBag.isForFirstSemester ? "first" : "second";
    string activeController = ViewContext.RouteData.Values["controller"].ToString();
    bool timeSingle = (Context.Request.Cookies["isTimeSingle"] ?? "false").ToString() == "false";
    List<List<int>> lstCells = new List<List<int>>();
    List<string> Days = new List<string>() { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday" }; 
    Regex groupPattern = new Regex(@"\(Group [A-Z]{1,2}[\d]?\)");
    for (int i = 0; i < Model.latestPeriod; i++)
    {
        lstCells.Add(new List<int>());
    }
}

@if (activeController == "Home")
{
    <div class="mb-1 toolbar shadow rounded-3">
        @await Html.PartialAsync("_ToolsNavBarPartial")
    </div>
}
@if (TempData["Message"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show alert-table" role="alert">
        <i class="fa-solid fa-check"></i>
        @TempData["Message"]
    </div>
}

<div class="main-table">
    <table class="table table-striped shadow rounded-4" style="width:700px" id="timeTable">
        <thead class="table-head table-active">
            <tr class="text-center text-primary">
                <th class="">Time</th>
                <th class="">Monday</th>
                <th class="">Tuesday</th>
                <th class="">Wednesday</th>
                <th class="">Thursday</th>
                <th class="">Friday</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.latestPeriod; i++)
            {
                <tr id="row @i">
                    <td class="text-center table-active text-primary fw-bold border-bottom align-middle"
                        style="font-size: 15px; padding:0 !important; width:90px !important;">
                        @{
                            string starthourtime = ((i + 7) > 9 ? (i + 7).ToString() : "0" + (i + 7).ToString());
                            string endhourtime = ((i + 8) > 9 ? (i + 8).ToString() : "0" + (i + 8).ToString());
                            starthourtime += ":00";
                            starthourtime += timeSingle ? $"-{endhourtime}:00" : "";
                        }
                        @starthourtime
                    </td>
                    @for (int j = 0; j < 5; j++)
                    {
                        Session session = Model.Sessions[j, i];
                        if (session != null)
                        {
                            int row = Extensions.GetInterval(session.sessionInPDFValue);

                            if (row > 1)
                            {
                                for (int k = 0; k < row - 1; k++)
                                {
                                    lstCells[i + k].Add(j);
                                }
                            }
                            if (i > 0 && lstCells[i - 1].Contains(j))
                            {

                                continue;
                            }

                            <td class="period-button table-cell" module-color="@session.ModuleCode" module-color-username="@User.Identity.Name"
                                id="col @j" rowspan="@row">
                                <span class="fw-bold">@(session.ModuleCode.ToLower().Contains("cccc") ? "CLASH!!" : session.ModuleCode)</span> <br />
                                <span class="hide-venue" style="display:none; font-size:12px">@groupPattern.Replace(session.Venue, "")</span>
                                <div class="delete-overlay">
                                    <a class="delete-btn" title="Session Details"
                                       asp-controller="Session" asp-action="@(!session.ModuleCode.ToLower().Contains("cccc") ?"SessionDetails":"EditClashes")" asp-route-session="@session.sessionInPDFValue">
                                        <i class="fa-solid fa-edit"></i>
                                    </a>

                                </div>
                            </td>
                        }
                        else
                        {
                            if (i > 0 && lstCells[i - 1].Contains(j))
                            {
                                continue;
                            }
                            <td class="period-button period-add table-cell text-white" id="@j">
                                <div class="delete-overlay">
                                    <a asp-action="AddSession" asp-controller="Session" asp-route-day="@Days[j]"
                                       asp-route-time="@(timeSingle ?  starthourtime.Replace(starthourtime.Substring(5), "") : starthourtime)" title="Add Session" class="delete-btn" style="width: 100%; height:100%;">
                                        <i class="fa-solid fa-add"></i>
                                    </a>
                                </div>
                            </td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
    @if (Model.latestPeriod < 15)
    {
        <div class="addRow">
            <form asp-controller="Home" asp-action="AddRow" asp-route-latestPeriod="@(++Model.latestPeriod)" method="post">
                <button class="btn btn-outline-primary addRowButton" title="Add Row" type="submit">
                    <i class="fa-solid fa-plus"></i>
                </button>
            </form>
        </div>
    }
</div>

@if (Context.Request.Cookies["Notified"] == "false")
{
    <!-- Modal -->
    <div class="modal fade " id="noticeModal" tabindex="-1" aria-labelledby="termsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-center" id="staticBackdropLabel">Important Notice</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body terms-modal">
                    <p>
                        Dear @User.Identity.Name😊,
                    </p>

                    <p>We would like to express our heartfelt gratitude for choosing Bongo for your needs. We strive to provide the best experience and service to our users.</p>

                    <p>
                        Currently, we are making some important updates to improve our services. During this period, you may encounter certain features that are temporarily unavailable. We also recommend that you use desktop (laptop) for better exeperience. We sincerely apologize for any inconvenience this may cause.
                    </p>
                    <p>
                        If you encounter any issues or have any questions, please do not hesitate to contact our support team. We are here to assist you and ensure that your experience with Bongo is as seamless as possible.
                    </p>
                    <p>Thank you for your understanding and continued support.<br /></p>

                    <p> Best regards,<br />The Bongo Team</p>

                </div>
                <div class="modal-footer">
                    <form asp-controller="Home" asp-action="Notice" method="post">
                        <button type="submit" class="btn btn-secondary" data-bs-dismiss="modal">Continue</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
}








